# cargo-features = ["codegen-backend"]
#
# [profile.dev]
# codegen-backend = "cranelift"
#
# [target.x86_64-unknown-linux-gnu]
# linker = "/usr/bin/clang"
# rustflags = ["-C", "link-arg=--ld-path=/usr/bin/mold"]

[package]
name = "delta_db"
version = "0.1.0"
edition = "2021"

[lib]
# The name of the native library. This is the name which will be used in Python to import the
# library (i.e. `import string_sum`). If you change this, you must also change the name of the
# `#[pymodule]` in `src/lib.rs`.
name = "delta_db"
# "cdylib" is necessary to produce a shared library for Python to import from.
#
# Downstream Rust code (including code in `bin/`, `examples/`, and `tests/`) will not be able
# to `use string_sum;` unless the "rlib" or "lib" crate type is also included, e.g.:
# crate-type = ["cdylib", "rlib"]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.82"
clap = { version = "4.5.4", features = ["derive"] }
serde = { version = "1.0.199", features = ["derive"] }
serde_json = "1.0.116"
serde_yaml = "0.9.34"
sqlx = { version = "0.7.4", features = [
  "runtime-tokio",
  "sqlite",
  "json",
  "uuid",
  "chrono",

] }
tokio = { version = "1.37.0", features = ["full"] }
pollster = "*"
tracing = "*"
pyo3 = { version = "0.21.2", features = ["anyhow"] }
